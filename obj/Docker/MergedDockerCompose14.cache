name: dockercompose3321867882747073746
services:
  authorizedbasedproject:
    build:
      context: F:\web_practice\authorizedBasedProject
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: authorizedbasedproject
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 5218
        published: "5218"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\lenovo\AppData\Roaming/Microsoft/UserSecrets
        target: C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\lenovo\AppData\Roaming/ASP.NET/Https
        target: C:\Users\ContainerUser\AppData\Roaming\ASP.NET\Https
        read_only: true
        bind:
          create_host_path: true
  db:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: YourStrong!Passw0rd
    image: mcr.microsoft.com/mssql/server:2022-latest-windows
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: mssql_data
        target: /var/opt/mssql
        volume: {}
networks:
  app-network:
    name: dockercompose3321867882747073746_app-network
    driver: nat
volumes:
  mssql_data:
    name: dockercompose3321867882747073746_mssql_data